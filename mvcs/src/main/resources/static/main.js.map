
{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/domain/auth-user.ts","webpack:///./src/app/domain/user.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/intro-content/intro-content.component.css","webpack:///./src/app/intro-content/intro-content.component.html","webpack:///./src/app/intro-content/intro-content.component.ts","webpack:///./src/app/intropage/intropage.component.css","webpack:///./src/app/intropage/intropage.component.html","webpack:///./src/app/intropage/intropage.component.ts","webpack:///./src/app/login-form/login-form.component.css","webpack:///./src/app/login-form/login-form.component.html","webpack:///./src/app/login-form/login-form.component.ts","webpack:///./src/app/new-user/new-user.component.css","webpack:///./src/app/new-user/new-user.component.html","webpack:///./src/app/new-user/new-user.component.ts","webpack:///./src/app/routers/routing.module.ts","webpack:///./src/app/services/blocked.service.ts","webpack:///./src/app/services/matches.service.ts","webpack:///./src/app/services/user-auth.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/user-info-display/user-info-display.component.css","webpack:///./src/app/user-info-display/user-info-display.component.html","webpack:///./src/app/user-info-display/user-info-display.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#fullPage {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-height: 100vh;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"fullPage\\\">\\r\\n\\r\\n  <app-header></app-header>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n  <app-footer></app-footer>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {RoutingModule} from \"./routers/routing.module\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nimport {UserService} from \"./services/user.service\";\r\n// import {AuthGuard} from \"./guards/auth.guard\";\r\nimport { IntropageComponent } from './intropage/intropage.component';\r\nimport { IntroContentComponent } from './intro-content/intro-content.component';\r\nimport { NewUserComponent } from './new-user/new-user.component';\r\n// import { ConfirmEqualValidatorDirective } from './directives/confirm-equal-validator.directive';\r\nimport {UserAuthService} from \"./services/user-auth.service\";\r\nimport { UserInfoDisplayComponent } from './user-info-display/user-info-display.component';\r\nimport {BlockedService} from \"./services/blocked.service\";\r\nimport {MatchesService} from \"./services/matches.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoginFormComponent,\r\n    DashboardComponent,\r\n    IntropageComponent,\r\n    IntroContentComponent,\r\n    NewUserComponent,\r\n    UserInfoDisplayComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [UserService, UserAuthService, BlockedService, MatchesService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".info-holder{\\r\\n  padding-top: 70px;\\r\\n}\\r\\n\\r\\nheader{\\r\\n  text-align: center;\\r\\n  padding: 20px 0;\\r\\n  font-size: 30px;\\r\\n  border-bottom: 2px solid #eee;\\r\\n  position: fixed;\\r\\n  width: 100%;\\r\\n  overflow: hidden;\\r\\n  background-color: black;\\r\\n  color: white;\\r\\n  left:0;\\r\\n  top: 0;\\r\\n  height: 40px;\\r\\n}\\r\\n\"","module.exports = \"<style>\\r\\n  div {\\r\\n    width: 400px;\\r\\n    border: 25px solid purple;\\r\\n    padding: 25px;\\r\\n    margin: 25px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<app-header></app-header>\\r\\n<div>\\r\\n<p class=\\\"info-holder\\\">\\r\\n\\r\\n\\r\\n  <app-user-info-display></app-user-info-display>\\r\\n  <button\\r\\n    (click)=\\\"socketChat()\\\"\\r\\n  class=\\\"btn-primary\\\">Socket Chat</button>\\r\\n  <br>\\r\\n  <a routerLink=\\\"/\\\"\\r\\n  class=\\\"btn-primary\\\">Go Back</a>\\r\\n</p>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from \"../services/user.service\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private user: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  socketChat(){\r\n    window.open(\"http://localhost:3000/\");\r\n  }\r\n\r\n}\r\n","export class AuthUser {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  email: string;\r\n\r\n  constructor(id: number, username: string, password: string, email: string){\r\n    this.id = id;\r\n    this.username = username;\r\n    this.password = password;\r\n    this.email = email;\r\n  }\r\n}\r\n","export class User {\r\n  infoId: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  bio: string;\r\n  photo: string;\r\n  myers: string;\r\n\r\n  constructor(infoId: number, firstName: string, lastName: string,\r\n              bio: string, photo: string, myers: string){\r\n    this.infoId = infoId;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.bio = bio;\r\n    this.photo = photo;\r\n    this.myers = myers;\r\n  }\r\n}\r\n","module.exports = \"footer{\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  padding: 10px 0px;\\r\\n  font-size: 15px;\\r\\n  border-bottom: 2px solid #eee;\\r\\n  position: fixed;\\r\\n  width: 100%;\\r\\n  overflow: hidden;\\r\\n  background-color: black;\\r\\n  left: 0;\\r\\n  bottom: 0;\\r\\n  height: 15px;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<div>\\r\\n  <footer class=\\\"border-top border border-info\\\" >We thank you for using our site. If you have any questions feel free to contact us at MyersFriends@friendly.net</footer>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"header{\\r\\n  text-align: center;\\r\\n  padding: 20px 0;\\r\\n  font-size: 30px;\\r\\n  border-bottom: 2px solid #eee;\\r\\n  position: fixed;\\r\\n  width: 100%;\\r\\n  overflow: hidden;\\r\\n  background-color: black;\\r\\n  color: white;\\r\\n  left:0;\\r\\n  top: 0;\\r\\n  height: 40px;\\r\\n}\\r\\n\"","module.exports = \"<style>\\r\\n  ul{\\r\\n    list-style-type: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    overflow: hidden;\\r\\n    background-color: #333;\\r\\n  }\\r\\n  li {\\r\\n    float: left;\\r\\n  }\\r\\n\\r\\n  li a {\\r\\n    display: block;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n    padding: 14px 16px;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n\\r\\n  li a:hover {\\r\\n    background-color: #111;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n<div>\\r\\n<ul>\\r\\n  <li><a class=\\\"active\\\" href=\\\"#home\\\">Home</a></li>\\r\\n</ul>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from \"../services/user.service\";\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private modal: NgbModal , private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".Cont{\\r\\n  padding-top: 70px;\\r\\n}\\r\\n\"","module.exports = \"<style>\\r\\n\\r\\n  section.content {\\r\\n\\r\\n    background-color: aquamarine;\\r\\n    width: 800px;\\r\\n    padding: 30px;\\r\\n    margin: 30px;\\r\\n    border-style: solid;\\r\\n    border-width: 10px;\\r\\n    border-color: indigo;\\r\\n    opacity: 0.5;\\r\\n    box-shadow: 10px 10px 5px grey;\\r\\n  }\\r\\n    h1 {\\r\\nfont-size: 40px;\\r\\n      font-weight: bold;\\r\\n      color: darkorchid;\\r\\n      text-decoration: underline;\\r\\n      text-transform: uppercase;\\r\\n      text-shadow: 2px 2px 4px #000000;\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</style>\\r\\n<body>\\r\\n\\r\\n<h1>The Big Picture</h1>\\r\\n<section class = \\\"content\\\">\\r\\n  <h2>Myers Briggs Type Indicator</h2>\\r\\n  <p class=\\\"MBTI\\\">\\r\\n    MBTI was developed by Isabel Briggs Myers, and her mother, Katherine Briggs, based of Carol Jung personality analysis that focused on four aspects of human psychological function. These functions will be described in more detail below.\\r\\n  </p>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content shadow p-3 mb-5 bg-light rounded\\\">\\r\\n  <header><h2>Introversion vs Extroversion</h2></header>\\r\\n  <p class=\\\"IntroVsExtro\\\">\\r\\n    Favorite world: Do you prefer to focus on the outer world or on your own inner world?\\r\\n    This preference refers to where one tends to get their energy and motivation from; from people and social situations or from internally.\\r\\n  <div>\\r\\n    <b>Introversion</b>\\r\\n    Those who tend to be more introverted usually focus their energy inward towards concepts and ideas. They use their ‘me time’ to recharge their batteries after being outwardly engaged for durations of time. They usually try to get an understanding of the world, they think deeply about things and tend to internalize their thoughts and ideas. They need little external stimulation, they can be easily over-stimulated which is one reason why they might focus more on their inner world.\\r\\n  </div>\\r\\n  <div>\\r\\n    <b>Extraversion</b>\\r\\n    The energy of extraverts is outward, towards people and things. They get their motivation and ‘recharge their batteries’ from being with other people. They are often viewed as relaxed and confident in social situations. They tend to think first and act later.\\r\\n  </div>\\r\\n  <div>\\r\\n    <b>Ambivert</b>\\r\\n    Introversion and Extroversion are two extremes on a spectrum. While there are individuals who can and do associate heavily with one side and very little of the other. The majority of people actually fall somewhere near the median in terms of being introverted or extroverted in certain situations. So when you receive an E or I this is only saying that all else being equal you are more likely to act more introverted or extroverted\\r\\n  </div>\\r\\n\\r\\n</section>\\r\\n<section class=\\\"content shadow p-3 mb-5 bg-light rounded \\\">\\r\\n  <header>Intuition vs Sensing</header>\\r\\n  <p class =\\\"IntuVsSense\\\">\\r\\n    Information: Do you prefer to focus on the outer world or on your own inner world?\\r\\n    Sensing\\r\\n    <b>Sensors</b>  tend to focus on the present. They are “here and now” people. They lean heavily on their five senses for gathering information about the outside world. They tend to see things as they are because they are concrete and literal thinkers.\\r\\n    <b>Sensors</b> tend to be:\\r\\n  </p>\\r\\n  <ul style=\\\"list-style-type:disc\\\">\\r\\n    <li>Concrete</li>.\\r\\n    <li>Realistic</li>\\r\\n    <li>Lives in the present</li>\\r\\n    <li>Aware of surroundings</li>\\r\\n    <li>Notice of details</li>\\r\\n    <li>Practical</li>\\r\\n    <li>Goes by senses</li>\\r\\n    <li>Factual</li>\\r\\n  </ul>\\r\\n  <p>\\r\\n    <b>Intuitive</b>\\r\\n    Intuitive people tend to live in the future and are immersed in the world of possibilities. They process information through patterns and impressions. Intuitives people value inspiration and imagination. They gather their knowledge from the universe by reading between the lines. Their abstract nature attracts them toward deep ideas and concepts. They tend to see the “big picture”.\\r\\n    Intuitives tend to be:\\r\\n  <ul>\\r\\n    <li>Future-focused</li>\\r\\n    <li>Sees possibilities</li>\\r\\n    <li>Inventive</li>\\r\\n    <li>Imaginative</li>\\r\\n    <li>Deep</li>\\r\\n    <li>Abstract</li>\\r\\n    <li>Idealistic</li>\\r\\n    <li>Theoretical</li>\\r\\n  </ul>\\r\\n\\r\\n</section>\\r\\n<section class=\\\"content shadow p-3 mb-5 bg-light rounded\\\">\\r\\n  <header><h2>Feeling vs Thinking</h2> </header>\\r\\n  <p class = \\\"FeelVsThink\\\">\\r\\n    The original naming of these types is a little archaic in that thinking refers to more than merely thought, and feeling is not about being over-emotional or sensitive. They are more about how we make decisions; through logic or through considering people\\r\\n    <b>Thinking</b>\\r\\n    Thinkers make their decisions primarily on logic, and when they do so, they consider a decision to be made. They tend to see the world I black and white and dislike fuzziness or obscurity.\\r\\n    Decisions: When making decisions, do you prefer to first look at logic and consistency or first look at the people and special circumstances?\\r\\n    <b>Thinkers</b>  tend to be:\\r\\n  <ul>\\r\\n    <li>Brief and concise</li>\\r\\n    <li>Logical; have order to their thoughts</li>\\r\\n    <li>Intellectually critical and objective</li>\\r\\n    <li>Calm and reasonable</li>\\r\\n    <li>Don’t assume that feelings are unimportant; they give things their own logical value</li>\\r\\n    <li>Present feeling and emotions as additional facts to be weighed in a decision.</li>\\r\\n  </ul>\\r\\n  <p>\\r\\n    <b>Feeling</b>\\r\\n    Feelers decide based primarily through social considerations, listening to their heart and considering the feelings of others. They see life as a human existence and material things as being subservient to this. They value harmony and use tact in their interactions with others.\\r\\n    <b>Feelers</b> tend to /be:\\r\\n  <ul>\\r\\n    <li>Introduce themselves and get to know people; full acceptance may take a long time.</li>\\r\\n    <li>Be personable and friendly</li>\\r\\n    <li>Demonstrate empathy by showing areas of agreement first</li>\\r\\n    <li>Show how the idea will affect people what people’s reaction would be.</li>\\r\\n    <li>Aware that how you communicate is as important as what you’re communicating.</li>\\r\\n    <li>Accept decisions that may not be based on facts.</li>\\r\\n  </ul>\\r\\n\\r\\n</section>\\r\\n<section class =\\\"content shadow p-3 mb-5 bg-light rounded\\\">\\r\\n  <header><h2>Judging vs Perceiving</h2></header>\\r\\n  <p class = \\\"JudgeVsPerc\\\">\\r\\n    <b>Structure:</b> In dealing with the outside world, do you prefer to get things decided or do you prefer to stay open to new and options?\\r\\n    Judging\\r\\n    Judging people think sequentially. They value order and organization. Their lives are scheduled and structured. Judging people seek closure and enjoy completing tasks. They take deadlines seriously. They work then they play. Judging doesn’t necessarily mean judgmental, more so how a person deals with the day to day tasks.\\r\\n    <b>Judgers</b> tend to be:\\r\\n  <ul>Decisive\\r\\n    <li>Controlled</li>\\r\\n    <li>Good at finishing</li>\\r\\n    <li>Organized</li>\\r\\n    <li>Structured</li>\\r\\n    <li>Scheduled</li>\\r\\n    <li>Quick at tasks</li>\\r\\n    <li>Responsible</li>\\r\\n    <li>Likes closure</li>\\r\\n    <li>Makes plans</li>\\r\\n  </ul>\\r\\n  <p>\\r\\n  <h3>Perceiving</h3>\\r\\n  <p>Perceivers are adaptable and flexible. They are random thinkers who prefer to keep their options open. Perceivers thrive with the unexpected and are open to change. They are spontaneous and often juggle several projects at once. They enjoying starting a task better than finishing it. Deadlines are often merely suggestions. Perceivers play as they work.\\r\\n  </p>\\r\\n  <p><b>Perceivers</b> tend to be:</p>\\r\\n\\r\\n  <ul>\\r\\n\\r\\n    <li>Adaptable</li>\\r\\n    <li>Relaxed</li>\\r\\n    <li>Disorganized</li>\\r\\n    <li>Care-free</li>\\r\\n    <li>Spontaneous</li>\\r\\n    <li>Changes tracks midway</li>\\r\\n    <li>Keeps options open</li>\\r\\n    <li>Procrastinates</li>\\r\\n    <li>Dislikes routine</li>\\r\\n    <li>Flexible</li>\\r\\n  </ul>\\r\\n</section>\\r\\n<section class=\\\"content shadow p-3 mb-5 bg-light rounded \\\">\\r\\n  <p>After reading through this short synopsis of the Myers-Briggs Type Indicator. I hope we have peaked your curiosity about the inner workings of your mind and we genuinely hope our site will help you make amazing connections.</p>\\r\\n\\r\\n  <p><b>Please Enjoy!</b></p>\\r\\n</section>\\r\\n\\r\\n</body>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-intro-content',\r\n  templateUrl: './intro-content.component.html',\r\n  styleUrls: ['./intro-content.component.css']\r\n})\r\nexport class IntroContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-login-form></app-login-form>\\r\\n<app-intro-content></app-intro-content>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ScrollToModule} from \"ng2-scroll-to-el\";\r\n\r\n@Component({\r\n  selector: 'app-intropage',\r\n  templateUrl: './intropage.component.html',\r\n  styleUrls: ['./intropage.component.css']\r\n})\r\nexport class IntropageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \":host {\\r\\n  flex-grow: 1;\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n  position: fixed;\\r\\n  left: 78%;\\r\\n  padding-top: 70px;\\r\\n}\\r\\n\\r\\ndiv.input {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\ndiv.input label {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  -webkit-transform: translateY(-50%);\\r\\n          transform: translateY(-50%);\\r\\n  left: 10px;\\r\\n  background: white;\\r\\n  padding: 5px 2px;\\r\\n}\\r\\n\\r\\ndiv.input input{\\r\\n  padding: 10px 20px;\\r\\n  font-size: 25px;\\r\\n  outline: 0;\\r\\n}\\r\\n\\r\\ndiv.input{\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"lgForm\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n  <div class=\\\"input\\\">\\r\\n    <label>Username</label>\\r\\n    <input type=\\\"text\\\" name=\\\"username\\\" [ngModel] required>\\r\\n  </div>\\r\\n  <div class=\\\"input\\\">\\r\\n    <label>Password</label>\\r\\n    <input type=\\\"password\\\" name=\\\"password\\\" [ngModel] required>\\r\\n  </div>\\r\\n  <div class=\\\"input\\\">\\r\\n    <button\\r\\n      type=\\\"submit\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      [disabled]=\\\"!f.valid\\\"\\r\\n      (click)=\\\"loginClick(f.value, f.valid)\\\">Login</button>\\r\\n  </div>\\r\\n  <div class=\\\"input\\\">\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      (click)=\\\"newUserClick()\\\">New User</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {AuthUser} from \"../domain/auth-user\";\r\nimport {Router} from \"@angular/router\";\r\nimport {UserAuthService} from \"../services/user-auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.css']\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n\r\n  constructor(private router:Router, private service:UserAuthService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  newUserClick(){\r\n    this.router.navigate(['/newuser']);\r\n  }\r\n\r\n  loginClick(data: AuthUser, valid){\r\n    if(valid){\r\n      if(this.service.checkUserAuth(data)\r\n        .subscribe(userInfo => localStorage.setItem(\"userid\", userInfo + \"\"))){\r\n          console.log(localStorage.getItem(\"userid\"));\r\n          if(localStorage.getItem(\"userid\") !== undefined ||\r\n            localStorage.getItem(\"userid\") !== null){\r\n            this.router.navigate(['/dashboard']);\r\n          } else {\r\n            //todo Invalid user info\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \":host {\\r\\n  flex-grow: 1;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\ndiv.input {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\ndiv.input label {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  -webkit-transform: translateY(-50%);\\r\\n          transform: translateY(-50%);\\r\\n  left: 10px;\\r\\n  background: white;\\r\\n  padding: 5px 2px;\\r\\n}\\r\\n\\r\\ndiv.input input{\\r\\n  padding: 10px 20px;\\r\\n  font-size: 25px;\\r\\n  outline: 0;\\r\\n}\\r\\n\\r\\ndiv.input{\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"lgForm\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n  <div class=\\\"input\\\">\\r\\n    <label>Username</label>\\r\\n    <input type=\\\"text\\\" name=\\\"username\\\" [ngModel] required>\\r\\n  </div>\\r\\n  <div class=\\\"input\\\">\\r\\n    <label>Password</label>\\r\\n    <input type=\\\"password\\\" name=\\\"password\\\" [ngModel] required>\\r\\n  </div>\\r\\n  <div class=\\\"input\\\">\\r\\n    <label>Confirm Password</label>\\r\\n    <input type=\\\"password\\\" name=\\\"cPassword\\\" [ngModel] required>\\r\\n  </div>\\r\\n  <!--<div class=\\\"input\\\" [class.has-error]=\\\"password.touched && password.required\\\">-->\\r\\n    <!--<label>Password</label>-->\\r\\n    <!--<input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\"-->\\r\\n           <!--[(ngModel)]=\\\"user.password\\\"#password required>-->\\r\\n    <!--<span class=\\\"help-block\\\" *ngIf=\\\"password.touched && password.errors?.required\\\">-->\\r\\n      <!--Password is required-->\\r\\n    <!--</span>-->\\r\\n  <!--</div>-->\\r\\n  <!--<div class=\\\"input\\\" [class.has-error]=\\\"pConfirm.touched && pConfirm.required\\\">-->\\r\\n    <!--<label>Confirm password</label>-->\\r\\n    <!--<input type=\\\"password\\\" name=\\\"pConfirm\\\" class=\\\"form-control\\\"-->\\r\\n           <!--[(ngModel)]=\\\"user.pConfirm\\\"#pConfirm required>-->\\r\\n    <!--<span class=\\\"help-block\\\" *ngIf=\\\"pConfirm.touched && pConfirm.errors?.required\\\">-->\\r\\n      <!--Password is required-->\\r\\n    <!--</span>-->\\r\\n  <!--</div>-->\\r\\n  <div class=\\\"input\\\">\\r\\n    <label>Email</label>\\r\\n    <input type=\\\"text\\\" name=\\\"email\\\" [ngModel] required>\\r\\n  </div>\\r\\n  <div class=\\\"input\\\">\\r\\n    <button\\r\\n      type=\\\"submit\\\"\\r\\n      [disabled]=\\\"!f.valid\\\"\\r\\n      (click)=\\\"registerUserClick(f.value)\\\">Login</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserAuthService} from \"../services/user-auth.service\";\r\nimport {AuthUser} from \"../domain/auth-user\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-new-user',\r\n  templateUrl: './new-user.component.html',\r\n  styleUrls: ['./new-user.component.css']\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n  private aUser: AuthUser = new AuthUser(0, \"\", \"\", \"\");\r\n  private isCreated: boolean;\r\n\r\n  constructor(private router: Router, private service: UserAuthService) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerUserClick(uAuth: AuthUser){\r\n    console.log(uAuth);\r\n    this.aUser.username = uAuth.username;\r\n    this.aUser.password = uAuth.password;\r\n    this.aUser.email = uAuth.email;\r\n    this.service.newUserAuth(this.aUser)\r\n      .subscribe(isCreated => this.isCreated = isCreated);\r\n\r\n    if(this.isCreated){\r\n      this.router.navigate(['']);\r\n    } else {\r\n\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\n// import {LoginFormComponent} from \"../login-form/login-form.component\";\r\nimport {DashboardComponent} from \"../dashboard/dashboard.component\";\r\n// import {AuthGuard} from \"../guards/auth.guard\";\r\nimport {IntropageComponent} from \"../intropage/intropage.component\";\r\nimport {NewUserComponent} from \"../new-user/new-user.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: IntropageComponent},\r\n  {path: 'dashboard',component: DashboardComponent},\r\n  {path: 'newuser', component: NewUserComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlockedService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllBlocked(blocked_id: number): Observable<number[]>{\r\n    return this.http.get<number[]>(`http://localhost:8080/blocked-api/blocked/${blocked_id}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatchesService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllMatches(myer_id: string): Observable<string[]>{\r\n    return this.http.get<string[]>(`http://localhost:8080/matches-api/matches/${myer_id}`);\r\n  }\r\n\r\n  getAllMyerTypes(): Observable<string[]>{\r\n    return this.http.get<string[]>(\"http://localhost:8080/matches-api/myertypes\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {AuthUser} from \"../domain/auth-user\";\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {User} from \"../domain/user\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserAuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  checkUserAuth(UserLogin: AuthUser): Observable<number>{\r\n    return this.http.post<number>('http://localhost:8080/userlogin-api/auth', UserLogin);\r\n  }\r\n\r\n  newUserAuth(UserLogin: AuthUser): Observable<boolean>{\r\n    return this.http.post<boolean>('http://localhost:8080/userlogin-api/userlogin', UserLogin);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"../domain/user\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUser(id: number): Observable<User> {\r\n    return this.http.get<User>(`http://localhost:8080/userinfo-api/userinfo/${id}`);\r\n  }\r\n\r\n  getAllMatches(myer_id: string): Observable<User[]> {\r\n    return this.http.get<User[]>(`http://localhost:8080/userinfo-api/userinfo/${myer_id}`);\r\n  }\r\n\r\n  saveUserInfo(user: User): Observable<any>{\r\n    return this.http.put<any>('http://localhost:8080/userinfo-api/userinfo', user);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <form class=\\\"lgForm\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n    <div>\\r\\n      <div class=\\\"image\\\">\\r\\n        Photo = {{user.photo}}\\r\\n      </div>\\r\\n      <div class=\\\"image-edit-input\\\" *ngIf=\\\"canEdit\\\" [ngModel]>\\r\\n        <input type = \\\"file\\\" name = \\\"photo\\\" (change) = \\\"onSelectFile($event)\\\" [(ngModel)]=\\\"user.photo\\\" [ngModel]>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div>\\r\\n      <div>\\r\\n        <div class=\\\"first-name\\\">\\r\\n          First Name: {{user.firstName}}\\r\\n        </div>\\r\\n        <div class=\\\"first-name-input\\\" *ngIf=\\\"canEdit\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" [ngModel]>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div class=\\\"last-name\\\">\\r\\n          Last Name: {{user.lastName}}\\r\\n        </div>\\r\\n        <div class=\\\"last-name-input\\\" *ngIf=\\\"canEdit\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" [ngModel]>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div class=\\\"bio\\\">\\r\\n          Bio: {{user.bio}}\\r\\n        </div>\\r\\n        <div class=\\\"bio-input\\\" *ngIf=\\\"canEdit\\\">\\r\\n          <input type=\\\"text\\\" maxlength=\\\"255\\\" name=\\\"bio\\\" [(ngModel)]=\\\"user.bio\\\" [ngModel]>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div class=\\\"myers\\\">\\r\\n        </div>\\r\\n        <div class=\\\"myers-dropdown\\\" *ngIf=\\\"canEdit\\\">\\r\\n          <form [formGroup]=\\\"myer_form\\\">\\r\\n            <select formControlName=\\\"myer_control\\\" name=\\\"myers\\\" [ngModel] required>\\r\\n              <option *ngFor=\\\"let type of myer_types\\\" [value]=\\\"type\\\">\\r\\n                {{type}}\\r\\n              </option>\\r\\n            </select>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!canEdit\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"canEditUserInfoClick()\\\">Edit profile information</button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"canEdit\\\">\\r\\n      <button type=\\\"button\\\"\\r\\n              [disabled]=\\\"!f.valid\\\"\\r\\n              (click)=\\\"updateUserInfoClick(f.value)\\\">\\r\\n        Update profile information</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {User} from \"../domain/user\";\r\nimport {Matches} from \"../domain/matches\";\r\nimport {Blocked} from \"../domain/blocked\";\r\nimport {RoutingModule} from \"../routers/routing.module\";\r\nimport {UserService} from \"../services/user.service\";\r\nimport {MatchesService} from \"../services/matches.service\";\r\nimport {BlockedService} from \"../services/blocked.service\";\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-user-info-display',\r\n  templateUrl: './user-info-display.component.html',\r\n  styleUrls: ['./user-info-display.component.css']\r\n})\r\nexport class UserInfoDisplayComponent implements OnInit {\r\n  @Input() user: User = new User(0, \"\", \"\", \"\", \"\", \"\");\r\n  myer_Matches: Matches;\r\n  myer_types: string[];\r\n  matched_Users: User[];\r\n  blocked: Blocked;\r\n  canEdit: boolean = false;\r\n  myer_form: FormGroup;\r\n  private arrayindex: number;\r\n\r\n  file : File = null;\r\n\r\n  constructor(private router: RoutingModule, private uService: UserService,\r\n              private mService: MatchesService, private bService: BlockedService,\r\n              private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.uService.getUser(parseInt(localStorage.getItem(\"userid\")))\r\n      .subscribe(user => {\r\n        console.log(user);\r\n        if(user === null){\r\n          console.log('the user is null');\r\n        } else {\r\n          this.user.photo = user.photo;\r\n          this.user.firstName = user.firstName;\r\n          this.user.lastName = user.lastName;\r\n          this.user.bio = user.bio;\r\n          this.user.myers = user.myers;\r\n          this.updateUserInfo();\r\n        }\r\n      });\r\n    this.mService.getAllMyerTypes()\r\n      .subscribe(myer_types => this.myer_types = myer_types);\r\n  }\r\n\r\n  updateUserInfo(){\r\n    this.mService.getAllMatches(this.user.myers)\r\n      .subscribe(matches => this.myer_Matches.MatchArray = matches);\r\n    this.bService.getAllBlocked(this.user.infoId)\r\n      .subscribe(blocked => this.blocked.BlockedArray = blocked);\r\n    this.uService.getAllMatches(this.user.myers)\r\n      .subscribe(matched_Users => this.matched_Users = matched_Users);\r\n    this.filterBlockedUsers();\r\n  }\r\n\r\n  filterBlockedUsers(){\r\n    this.matched_Users.forEach(user => {\r\n      if(this.blocked.BlockedArray.includes(user.infoId)){\r\n        this.arrayindex = this.matched_Users.indexOf(user);\r\n        if(this.arrayindex !== -1){\r\n          this.matched_Users.splice(this.arrayindex, 1);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  canEditUserInfoClick(){\r\n    this.canEdit = true;\r\n\r\n    this.myer_form = this.fb.group({\r\n      myer_control: this.user.myers\r\n    });\r\n  }\r\n\r\n  updateUserInfoClick(userInfo: User){\r\n    this.user.firstName = userInfo.firstName;\r\n    this.user.lastName = userInfo.lastName;\r\n    this.user.bio = userInfo.bio;\r\n    this.user.myers = userInfo.myers;\r\n    this.user.photo = userInfo.photo;\r\n\r\n    this.uService.saveUserInfo(this.user).subscribe();\r\n    this.updateUserInfo();\r\n\r\n    this.canEdit = false;\r\n  }\r\n\r\n  onSelectFile(event) {\r\n    event.preventDefault();\r\n\r\n    //Setting this.file equal to the selected file\r\n    this.file = event.target.files[0];\r\n\r\n    if(this.file != null){\r\n      //Passing image file to UploadImage\r\n      this.uploadImage(this.file);\r\n    }\r\n  }//ends onSelectFile\r\n\r\n  uploadImage(file){\r\n\r\n    fetch('https://api.imgur.com/3/image',{\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: 'Client-ID c95aaa064b20127',\r\n      },\r\n      body: file\r\n    }).then(response =>{\r\n      console.log(response);\r\n      if(response.ok){\r\n        alert('Image Uploaded Succesfully');\r\n      }else{\r\n        alert('Image Failed to upload');\r\n      }\r\n\r\n      return response.json();\r\n    }).then(json=>{\r\n      console.log(json);\r\n\r\n      let url = json.data.link;\r\n      //alert(url);\r\n      //let test = json.data.deletehash;\r\n\r\n      this.user.photo = url;\r\n      window.open(url);\r\n    });\r\n\r\n  }//ends uploadImage\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}

